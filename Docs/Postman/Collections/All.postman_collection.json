{
	"info": {
		"_postman_id": "3a483820-09f1-4dc4-b54e-d851c52f296e",
		"name": "All",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Individual Requests",
			"item": [
				{
					"name": "Scores",
					"item": [
						{
							"name": "ById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
										"exec": [
											"pm.test(\"Successful request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});",
											"",
											"",
											"",
											"if(pm.response.code > 199 && pm.response.code < 203){",
											"    var jsonData = pm.response.json();",
											"    ",
											"    pm.test(\"Response not null\", function () {",
											"        pm.expect(jsonData).not.eql(null);",
											"    });",
											"",
											"    ",
											"    pm.test(\"Response not undefined\", function () {",
											"        pm.expect(jsonData).not.eql(undefined);",
											"    });",
											"    ",
											"    if(jsonData !== null && jsonData !== undefined){",
											"        ",
											"            var puidString = pm.globals.get(\"PUID\");",
											"            var puid = parseInt(puidString);",
											"            var pvString = pm.globals.get(\"PV\");",
											"            var pv = parseInt(pvString);",
											"            var userId = jsonData.userId;",
											"            var value = jsonData.value;",
											"",
											"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
											"                pm.expect(userId).to.eql(puid);",
											"            }); ",
											"            ",
											"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
											"                pm.expect(value).to.eql(pv);",
											"            }); ",
											"            ",
											"",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Score}}?{{i}}={{P_id}}",
									"host": [
										"{{Score}}"
									],
									"query": [
										{
											"key": "{{i}}",
											"value": "{{P_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ByUserId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
										"exec": [
											"pm.test(\"Successful request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});",
											"",
											"",
											"",
											"if(pm.response.code > 199 && pm.response.code < 203){",
											"    var jsonData = pm.response.json();",
											"    ",
											"    pm.test(\"Response not null\", function () {",
											"        pm.expect(jsonData).not.eql(null);",
											"    });",
											"",
											"    ",
											"    pm.test(\"Response not undefined\", function () {",
											"        pm.expect(jsonData).not.eql(undefined);",
											"    });",
											"    ",
											"    if(jsonData !== null && jsonData !== undefined){",
											"        ",
											"        puid = pm.globals.get(\"PUID\")",
											"        var firstResult = jsonData[0];",
											"        var firstUserId = firstResult.userId;",
											"        var lastResult = jsonData[jsonData.length - 1];",
											"        var lastUserId = lastResult.userId;",
											"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
											"        var middleUserId = middleResult.userId;",
											"        ",
											"        if(jsonData.length > 0){",
											"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
											"                pm.expect(firstUserId).to.eql(puid);",
											"            }); ",
											"            ",
											"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
											"                pm.expect(lastUserId).to.eql(puid);",
											"            }); ",
											"            ",
											"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
											"                pm.expect(middleUserId).to.eql(puid);",
											"            }); ",
											"        }",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
									"host": [
										"{{Score}}{{U}}"
									],
									"query": [
										{
											"key": "{{uI}}",
											"value": "{{PUID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "All",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
										"exec": [
											"pm.test(\"Successful request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});",
											"",
											"",
											"",
											"if(pm.response.code > 199 && pm.response.code < 203){",
											"    var jsonData = pm.response.json();",
											"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\"); ",
											"    ",
											"    pm.test(\"Response not null\", function () {",
											"        pm.expect(jsonData).not.eql(null);",
											"    });",
											"",
											"    ",
											"    pm.test(\"Response not undefined\", function () {",
											"        pm.expect(jsonData).not.eql(undefined);",
											"    });",
											"    ",
											"    if(jsonData !== null && jsonData !== undefined && jsonData.length > 0){",
											"        var score = jsonData[0];",
											"        var scoreId = score._id;",
											"        var scoreUserId = score.userId;",
											"        var scoreValue = score.value;",
											"        pm.globals.set(\"P_id\", scoreId);",
											"        pm.globals.set(\"PUID\", scoreUserId);",
											"        pm.globals.set(\"PV\", scoreValue);",
											"    }",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c697e455-14d8-431d-8b24-bd2ae38b363c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Score}}{{A}}",
									"host": [
										"{{Score}}{{A}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Single",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
										"exec": [
											"pm.test(\"Successful request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});",
											"",
											"",
											"",
											"if(pm.response.code > 199 && pm.response.code < 203){",
											"    var jsonData = pm.response.json();",
											"    ",
											"    pm.test(\"Response not null\", function () {",
											"        pm.expect(jsonData).not.eql(null);",
											"    });",
											"",
											"    ",
											"    pm.test(\"Response not undefined\", function () {",
											"        pm.expect(jsonData).not.eql(undefined);",
											"    });",
											"    ",
											"    if(jsonData !== null && jsonData !== undefined){",
											"        pm.globals.set(\"P_id\", jsonData._id);",
											"    }",
											"    ",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
										"exec": [
											"pm.globals.set(\"PUID\", 888888888);",
											"pm.globals.set(\"PV\", 8);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
								},
								"url": {
									"raw": "{{Score}}",
									"host": [
										"{{Score}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Single",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
										"exec": [
											"pm.test(\"Successful request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});",
											"",
											"",
											"",
											"if(pm.response.code > 199 && pm.response.code < 203){",
											"    var jsonData = pm.response.json();",
											"    ",
											"    pm.test(\"Response not null\", function () {",
											"        pm.expect(jsonData).not.eql(null);",
											"    });",
											"",
											"    ",
											"    pm.test(\"Response not undefined\", function () {",
											"        pm.expect(jsonData).not.eql(undefined);",
											"    });",
											"    ",
											"    if(jsonData !== null && jsonData !== undefined){",
											"        pm.globals.set(\"P_id\", jsonData._id);",
											"    }",
											"    ",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ff2ccda2-64db-4cde-aef9-b121db6a3afd",
										"exec": [
											"pm.globals.set(\"PUID\", 777777777);",
											"pm.globals.set(\"PV\", 7);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
								},
								"url": {
									"raw": "{{Score}}?{{i}}={{P_id}}",
									"host": [
										"{{Score}}"
									],
									"query": [
										{
											"key": "{{i}}",
											"value": "{{P_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Single",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
										"exec": [
											"pm.test(\"Successful request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});",
											"",
											"",
											"if(pm.response.code > 199 && pm.response.code < 203){",
											"    var jsonData = pm.response.json();",
											"    ",
											"    pm.test(\"Response not null\", function () {",
											"        pm.expect(jsonData).not.eql(null);",
											"    });",
											"",
											"    ",
											"    pm.test(\"Response not undefined\", function () {",
											"        pm.expect(jsonData).not.eql(undefined);",
											"    });",
											"    ",
											"    if(jsonData !== null && jsonData !== undefined){",
											"        //Additional Tests Here",
											"    }",
											"    ",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Score}}?_id={{P_id}}",
									"host": [
										"{{Score}}"
									],
									"query": [
										{
											"key": "_id",
											"value": "{{P_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "All",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
										"exec": [
											"pm.test(\"Successful request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});",
											"",
											"",
											"",
											"if(pm.response.code > 199 && pm.response.code < 203){",
											"    var jsonData = pm.response.json();",
											"    ",
											"    pm.test(\"Response not null\", function () {",
											"        pm.expect(jsonData).not.eql(null);",
											"    });",
											"",
											"    ",
											"    pm.test(\"Response not undefined\", function () {",
											"        pm.expect(jsonData).not.eql(undefined);",
											"    });",
											"    ",
											"    if(jsonData !== null && jsonData !== undefined){",
											"        //Additional Tests Here",
											"    }",
											"    ",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Score}}{{A}}",
									"host": [
										"{{Score}}{{A}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Test Runner",
			"item": [
				{
					"name": "Scores",
					"item": [
						{
							"name": "Delete All - Start",
							"item": [
								{
									"name": "Scores - Delete All",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
												"exec": [
													"pm.test(\"Successful request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"});",
													"",
													"",
													"",
													"if(pm.response.code > 199 && pm.response.code < 203){",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.test(\"Response not null\", function () {",
													"        pm.expect(jsonData).not.eql(null);",
													"    });",
													"",
													"    ",
													"    pm.test(\"Response not undefined\", function () {",
													"        pm.expect(jsonData).not.eql(undefined);",
													"    });",
													"    ",
													"    if(jsonData !== null && jsonData !== undefined){",
													"        //Additional Tests Here",
													"    }",
													"    ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{Score}}{{A}}",
											"host": [
												"{{Score}}{{A}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Scores - Delete All Tester",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
												"exec": [
													"pm.test(\"Successful request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"});",
													"",
													"",
													"",
													"if(pm.response.code > 199 && pm.response.code < 203){",
													"    var jsonData = pm.response.json();",
													"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\"); ",
													"    ",
													"    pm.test(\"Response not null\", function () {",
													"        pm.expect(jsonData).not.eql(null);",
													"    });",
													"",
													"    ",
													"    pm.test(\"Response not undefined\", function () {",
													"        pm.expect(jsonData).not.eql(undefined);",
													"    });",
													"    ",
													"    if(jsonData !== null && jsonData !== undefined){",
													"",
													"        pm.test(\"0 Scores after Delete All\", function () {",
													"        ",
													"            pm.expect(jsonData.length).to.eql(expectedScoresLength);",
													"        });",
													"    }",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c697e455-14d8-431d-8b24-bd2ae38b363c",
												"exec": [
													"pm.globals.set(\"expectedScoresLength\", 0);",
													"pm.globals.set(\"PUID\", 0);",
													"pm.globals.set(\"PV\", 0);",
													"pm.globals.unset(\"P_id\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{Score}}{{A}}",
											"host": [
												"{{Score}}{{A}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "10 Posts & 10 Puts",
							"item": [
								{
									"name": "10 Posts",
									"item": [
										{
											"name": "Post Score 1",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}",
															"host": [
																"{{Score}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        scoresLength = jsonData.length;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"expectedScoresLength\", pm.globals.get(\"expectedScoresLength\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Post Score 2",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}",
															"host": [
																"{{Score}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        scoresLength = jsonData.length;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"expectedScoresLength\", pm.globals.get(\"expectedScoresLength\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Post Score 3",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}",
															"host": [
																"{{Score}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        scoresLength = jsonData.length;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"expectedScoresLength\", pm.globals.get(\"expectedScoresLength\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Post Score 4",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}",
															"host": [
																"{{Score}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        scoresLength = jsonData.length;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"expectedScoresLength\", pm.globals.get(\"expectedScoresLength\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Post Score 5",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}",
															"host": [
																"{{Score}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        scoresLength = jsonData.length;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"expectedScoresLength\", pm.globals.get(\"expectedScoresLength\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Post Score 6",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}",
															"host": [
																"{{Score}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        scoresLength = jsonData.length;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"expectedScoresLength\", pm.globals.get(\"expectedScoresLength\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Post Score 7",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}",
															"host": [
																"{{Score}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        scoresLength = jsonData.length;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"expectedScoresLength\", pm.globals.get(\"expectedScoresLength\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Post Score 8",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}",
															"host": [
																"{{Score}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        scoresLength = jsonData.length;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"expectedScoresLength\", pm.globals.get(\"expectedScoresLength\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Post Score 9",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}",
															"host": [
																"{{Score}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        scoresLength = jsonData.length;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"expectedScoresLength\", pm.globals.get(\"expectedScoresLength\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Post Score 10",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}",
															"host": [
																"{{Score}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var scoresLength = jsonData.length;",
																	"        var scoresIndexToUpdate = pm.globals.get(\"scoresIndexToUpdate\");",
																	"        var resultToUpdate = jsonData[scoresIndexToUpdate];",
																	"        var idToUpdate = resultToUpdate._id;",
																	"        ",
																	"        pm.test(\"Scores Length is \" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"        ",
																	"        ",
																	"        pm.globals.set(\"P_id\", idToUpdate);",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"expectedScoresLength\", pm.globals.get(\"expectedScoresLength\") + 1);",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "10 Puts",
									"item": [
										{
											"name": "Put Score 1",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PV\", 1);",
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"UserId\": {{PUID}},\r\n\t\"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var scoresLength = jsonData.length;",
																	"        var scoresIndexToUpdate = pm.globals.get(\"scoresIndexToUpdate\");",
																	"        var resultToUpdate = jsonData[scoresIndexToUpdate];",
																	"        var idToUpdate = resultToUpdate._id;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"        ",
																	"        ",
																	"        pm.globals.set(\"P_id\", idToUpdate);",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"scoresIndexToUpdate\", 0);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Put Score 2",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"UserId\": {{PUID}},\r\n\t\"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var scoresLength = jsonData.length;",
																	"        var scoresIndexToUpdate = pm.globals.get(\"scoresIndexToUpdate\");",
																	"        var resultToUpdate = jsonData[scoresIndexToUpdate];",
																	"        var idToUpdate = resultToUpdate._id;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"        ",
																	"        ",
																	"        pm.globals.set(\"P_id\", idToUpdate);",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"scoresIndexToUpdate\", pm.globals.get(\"scoresIndexToUpdate\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Put Score 3",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"UserId\": {{PUID}},\r\n\t\"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var scoresLength = jsonData.length;",
																	"        var scoresIndexToUpdate = pm.globals.get(\"scoresIndexToUpdate\");",
																	"        var resultToUpdate = jsonData[scoresIndexToUpdate];",
																	"        var idToUpdate = resultToUpdate._id;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"        ",
																	"        ",
																	"        pm.globals.set(\"P_id\", idToUpdate);",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"scoresIndexToUpdate\", pm.globals.get(\"scoresIndexToUpdate\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Put Score 4",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"UserId\": {{PUID}},\r\n\t\"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var scoresLength = jsonData.length;",
																	"        var scoresIndexToUpdate = pm.globals.get(\"scoresIndexToUpdate\");",
																	"        var resultToUpdate = jsonData[scoresIndexToUpdate];",
																	"        var idToUpdate = resultToUpdate._id;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"        ",
																	"        ",
																	"        pm.globals.set(\"P_id\", idToUpdate);",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"scoresIndexToUpdate\", pm.globals.get(\"scoresIndexToUpdate\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Put Score 5",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"UserId\": {{PUID}},\r\n\t\"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var scoresLength = jsonData.length;",
																	"        var scoresIndexToUpdate = pm.globals.get(\"scoresIndexToUpdate\");",
																	"        var resultToUpdate = jsonData[scoresIndexToUpdate];",
																	"        var idToUpdate = resultToUpdate._id;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"        ",
																	"        ",
																	"        pm.globals.set(\"P_id\", idToUpdate);",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"scoresIndexToUpdate\", pm.globals.get(\"scoresIndexToUpdate\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Put Score 6",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"UserId\": {{PUID}},\r\n\t\"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var scoresLength = jsonData.length;",
																	"        var scoresIndexToUpdate = pm.globals.get(\"scoresIndexToUpdate\");",
																	"        var resultToUpdate = jsonData[scoresIndexToUpdate];",
																	"        var idToUpdate = resultToUpdate._id;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"        ",
																	"        ",
																	"        pm.globals.set(\"P_id\", idToUpdate);",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"scoresIndexToUpdate\", pm.globals.get(\"scoresIndexToUpdate\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Put Score 7",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"UserId\": {{PUID}},\r\n\t\"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var scoresLength = jsonData.length;",
																	"        var scoresIndexToUpdate = pm.globals.get(\"scoresIndexToUpdate\");",
																	"        var resultToUpdate = jsonData[scoresIndexToUpdate];",
																	"        var idToUpdate = resultToUpdate._id;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"        ",
																	"        ",
																	"        pm.globals.set(\"P_id\", idToUpdate);",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"scoresIndexToUpdate\", pm.globals.get(\"scoresIndexToUpdate\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Put Score 8",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"UserId\": {{PUID}},\r\n\t\"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var scoresLength = jsonData.length;",
																	"        var scoresIndexToUpdate = pm.globals.get(\"scoresIndexToUpdate\");",
																	"        var resultToUpdate = jsonData[scoresIndexToUpdate];",
																	"        var idToUpdate = resultToUpdate._id;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"        ",
																	"        ",
																	"        pm.globals.set(\"P_id\", idToUpdate);",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"scoresIndexToUpdate\", pm.globals.get(\"scoresIndexToUpdate\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Put Score 9",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"UserId\": {{PUID}},\r\n\t\"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var scoresLength = jsonData.length;",
																	"        var scoresIndexToUpdate = pm.globals.get(\"scoresIndexToUpdate\");",
																	"        var resultToUpdate = jsonData[scoresIndexToUpdate];",
																	"        var idToUpdate = resultToUpdate._id;",
																	"        ",
																	"        pm.test(\"Scores Length is\" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"        ",
																	"        ",
																	"        pm.globals.set(\"P_id\", idToUpdate);",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"scoresIndexToUpdate\", pm.globals.get(\"scoresIndexToUpdate\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										},
										{
											"name": "Put Score 10",
											"item": [
												{
													"name": "Score",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        pm.globals.set(\"P_id\", jsonData._id);",
																	"    }",
																	"    ",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "d70e10f0-59a0-4f3a-bdc1-f89f54dd0b74",
																"exec": [
																	"pm.globals.set(\"PV\", 0);",
																	"pm.globals.set(\"PUID\", pm.globals.get(\"PUID\") + 1);",
																	"pm.globals.set(\"PV\", pm.globals.get(\"PV\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"UserId\": {{PUID}},\r\n\t\"Value\": {{PV}}\r\n}"
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresById",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"            var puidString = pm.globals.get(\"PUID\");",
																	"            var puid = parseInt(puidString);",
																	"            var pvString = pm.globals.get(\"PV\");",
																	"            var pv = parseInt(pvString);",
																	"            var userId = jsonData.userId;",
																	"            var value = jsonData.value;",
																	"",
																	"            pm.test(\"User Id is \" + puid + \": \" + userId, function () {",
																	"                pm.expect(userId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Value Id is \" + pv + \": \" + value, function () {",
																	"                pm.expect(value).to.eql(pv);",
																	"            }); ",
																	"            ",
																	"",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}?{{i}}={{P_id}}",
															"host": [
																"{{Score}}"
															],
															"query": [
																{
																	"key": "{{i}}",
																	"value": "{{P_id}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "ScoresByUserId",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        puid = pm.globals.get(\"PUID\")",
																	"        var firstResult = jsonData[0];",
																	"        var firstUserId = firstResult.userId;",
																	"        var lastResult = jsonData[jsonData.length - 1];",
																	"        var lastUserId = lastResult.userId;",
																	"        var middleResult = jsonData[Math.round(((jsonData.length - 1)/2))];",
																	"        var middleUserId = middleResult.userId;",
																	"        ",
																	"        if(jsonData.length > 0){",
																	"            pm.test(\"First User Id is \" + puid + \": \" + firstUserId, function () {",
																	"                pm.expect(firstUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Last User Id is \" + puid + \": \" + lastUserId, function () {",
																	"                pm.expect(lastUserId).to.eql(puid);",
																	"            }); ",
																	"            ",
																	"            pm.test(\"Middle User Id is \" + puid + \": \" + middleUserId, function () {",
																	"                pm.expect(middleUserId).to.eql(puid);",
																	"            }); ",
																	"        }",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{U}}?{{uI}}={{PUID}}",
															"host": [
																"{{Score}}{{U}}"
															],
															"query": [
																{
																	"key": "{{uI}}",
																	"value": "{{PUID}}"
																}
															]
														}
													},
													"response": []
												},
												{
													"name": "Scores",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
																"exec": [
																	"pm.test(\"Successful request\", function () {",
																	"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
																	"});",
																	"",
																	"",
																	"",
																	"if(pm.response.code > 199 && pm.response.code < 203){",
																	"    var jsonData = pm.response.json();",
																	"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\");",
																	"    ",
																	"    pm.test(\"Response not null\", function () {",
																	"        pm.expect(jsonData).not.eql(null);",
																	"    });",
																	"",
																	"    ",
																	"    pm.test(\"Response not undefined\", function () {",
																	"        pm.expect(jsonData).not.eql(undefined);",
																	"    });",
																	"    ",
																	"    if(jsonData !== null && jsonData !== undefined){",
																	"        ",
																	"        var scoresLength = jsonData.length;",
																	"        var scoresIndexToUpdate = pm.globals.get(\"scoresIndexToUpdate\");",
																	"        var resultToUpdate = jsonData[scoresIndexToUpdate];",
																	"        var idToUpdate = resultToUpdate._id;",
																	"        ",
																	"        pm.test(\"Scores Length is \" + expectedScoresLength + \": \" + scoresLength, function () {",
																	"        ",
																	"            pm.expect(scoresLength).to.eql(expectedScoresLength);",
																	"        });",
																	"        ",
																	"        ",
																	"        pm.globals.set(\"P_id\", idToUpdate);",
																	"    }",
																	"}",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "9fd40407-fe27-41dd-9748-5f1b917eab72",
																"exec": [
																	"pm.globals.set(\"scoresIndexToUpdate\", pm.globals.get(\"scoresIndexToUpdate\") + 1);"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": ""
														},
														"url": {
															"raw": "{{Score}}{{A}}",
															"host": [
																"{{Score}}{{A}}"
															]
														}
													},
													"response": []
												}
											],
											"_postman_isSubFolder": true
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Post, Put & Delete Tester",
							"item": [
								{
									"name": "Score - Post Tester",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
												"exec": [
													"pm.test(\"Successful request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"});",
													"",
													"",
													"if(pm.response.code > 199 && pm.response.code < 203){",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.test(\"Response not null\", function () {",
													"        pm.expect(jsonData).not.eql(null);",
													"    });",
													"",
													"    ",
													"    pm.test(\"Response not undefined\", function () {",
													"        pm.expect(jsonData).not.eql(undefined);",
													"    });",
													"    ",
													"    if(jsonData !== null && jsonData !== undefined){",
													"        pm.globals.set(\"P_id\", jsonData._id);",
													"    }",
													"    ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a8b1e299-4c92-4b80-bb83-f704b8621740",
												"exec": [
													"pm.globals.set(\"PUID\", 999999999);",
													"pm.globals.set(\"PV\", 5);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
										},
										"url": {
											"raw": "{{Score}}",
											"host": [
												"{{Score}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Scores - Check Successful Post",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
												"exec": [
													"pm.test(\"Successful request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"});",
													"",
													"",
													"",
													"if(pm.response.code > 199 && pm.response.code < 203){",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.test(\"Response not null\", function () {",
													"        pm.expect(jsonData).not.eql(null);",
													"    });",
													"",
													"    ",
													"    pm.test(\"Response not undefined\", function () {",
													"        pm.expect(jsonData).not.eql(undefined);",
													"    });",
													"    ",
													"    if(jsonData !== null && jsonData !== undefined){",
													"        var scoresWithPostedId = jsonData.filter(score => score._id === pm.globals.get(\"P_id\"));",
													"        var amountOfScoresWithPostedId = scoresWithPostedId.length;",
													"        ",
													"        pm.test(\"Scores contains posted Id\", function () {",
													"            pm.expect(amountOfScoresWithPostedId).to.eql(1);",
													"        });",
													"        ",
													"",
													"        if(amountOfScoresWithPostedId === 1){",
													"            var scoreWithPostedId = scoresWithPostedId[0];",
													"            var userId = scoreWithPostedId.userId;",
													"            var value = scoreWithPostedId.value;",
													"            var puidString = pm.globals.get(\"PUID\");",
													"            var puid = parseInt(puidString);",
													"            var pvString = pm.globals.get(\"PV\");",
													"            var pv = parseInt(pvString);",
													"            pm.test(\"UserId of Score with Posted Id = Posted User Id\", function () {",
													"                pm.expect(userId).to.eql(puid);",
													"    ",
													"            });",
													"            ",
													"            pm.test(\"Value of Score with Posted Id = Posted Value\", function () {",
													"                pm.expect(value).to.eql(pv);",
													"    ",
													"            });",
													"        }",
													"    }",
													"    ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deb1e4ec-693d-41c6-86ba-fc189a9c814c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{Score}}{{A}}",
											"host": [
												"{{Score}}{{A}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Score - Put Tester",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a7bfcac-feda-4eb4-8101-dfa9b86df770",
												"exec": [
													"pm.test(\"Successful request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"});",
													"",
													"",
													"",
													"if(pm.response.code > 199 && pm.response.code < 203){",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.test(\"Response not null\", function () {",
													"        pm.expect(jsonData).not.eql(null);",
													"    });",
													"",
													"    ",
													"    pm.test(\"Response not undefined\", function () {",
													"        pm.expect(jsonData).not.eql(undefined);",
													"    });",
													"    ",
													"    if(jsonData !== null && jsonData !== undefined){",
													"        pm.globals.set(\"P_id\", jsonData._id);",
													"    }",
													"    ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"UserId\": {{PUID}},\r\n  \"Value\": {{PV}}\r\n}"
										},
										"url": {
											"raw": "{{Score}}?{{i}}={{P_id}}",
											"host": [
												"{{Score}}"
											],
											"query": [
												{
													"key": "{{i}}",
													"value": "{{P_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Scores - Check Successful Put",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
												"exec": [
													"pm.test(\"Successful request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"});",
													"",
													"",
													"",
													"if(pm.response.code > 199 && pm.response.code < 203){",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.test(\"Response not null\", function () {",
													"        pm.expect(jsonData).not.eql(null);",
													"    });",
													"",
													"    ",
													"    pm.test(\"Response not undefined\", function () {",
													"        pm.expect(jsonData).not.eql(undefined);",
													"    });",
													"    ",
													"    if(jsonData !== null && jsonData !== undefined){",
													"        ",
													"        var scoresWithPutId = jsonData.filter(score => score._id === pm.globals.get(\"P_id\"))",
													"        var amountOfScoresWithPutId = scoresWithPutId.length;",
													"        ",
													"        pm.test(\"Scores contains put Id\", function () {",
													"            pm.expect(amountOfScoresWithPutId).to.eql(1);",
													"        });",
													"        ",
													"",
													"        if(amountOfScoresWithPutId === 1){",
													"            var scoreWithPutId = jsonData.filter(score => score._id === pm.globals.get(\"P_id\"))[0];",
													"            var userId = scoreWithPutId.userId;",
													"            var value = scoreWithPutId.value;",
													"            var puidString = pm.globals.get(\"PUID\");",
													"            var puid = parseInt(puidString);",
													"            var pvString = pm.globals.get(\"PV\");",
													"            var pv = parseInt(pvString);",
													"            ",
													"            pm.test(\"UserId of Score with Put Id = Put User Id\", function () {",
													"                pm.expect(userId).to.eql(puid);",
													"    ",
													"            });",
													"            ",
													"            pm.test(\"Value of Score with Put Id = Put Value\", function () {",
													"                pm.expect(value).to.eql(pv);",
													"    ",
													"            });",
													"        }",
													"    }",
													"    ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{Score}}{{A}}",
											"host": [
												"{{Score}}{{A}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Scores - Delete Posted & Putted Score",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
												"exec": [
													"pm.test(\"Successful request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"});",
													"",
													"",
													"if(pm.response.code > 199 && pm.response.code < 203){",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.test(\"Response not null\", function () {",
													"        pm.expect(jsonData).not.eql(null);",
													"    });",
													"",
													"    ",
													"    pm.test(\"Response not undefined\", function () {",
													"        pm.expect(jsonData).not.eql(undefined);",
													"    });",
													"    ",
													"    if(jsonData !== null && jsonData !== undefined){",
													"        //Additional Tests Here",
													"    }",
													"    ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{Score}}?_id={{P_id}}",
											"host": [
												"{{Score}}"
											],
											"query": [
												{
													"key": "_id",
													"value": "{{P_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Scores - Check Successful Delete of Posted & Putted Score",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
												"exec": [
													"pm.test(\"Successful request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"});",
													"",
													"",
													"",
													"if(pm.response.code > 199 && pm.response.code < 203){",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.test(\"Response not null\", function () {",
													"        pm.expect(jsonData).not.eql(null);",
													"    });",
													"",
													"    ",
													"    pm.test(\"Response not undefined\", function () {",
													"        pm.expect(jsonData).not.eql(undefined);",
													"    });",
													"    ",
													"    if(jsonData !== null && jsonData !== undefined){",
													"        ",
													"        var amountOfScoresWithPostedId = jsonData.filter(score => score._id === pm.globals.get(\"P_id\")).length;",
													"        ",
													"        pm.test(\"Scores does Not contain Posted (and subsequently deleted) Id\", function () {",
													"            pm.expect(amountOfScoresWithPostedId).to.eql(0);",
													"        });",
													"    }",
													"    ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{Score}}{{A}}",
											"host": [
												"{{Score}}{{A}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete All - Finish",
							"item": [
								{
									"name": "Scores - Delete All",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
												"exec": [
													"pm.test(\"Successful request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"});",
													"",
													"",
													"",
													"if(pm.response.code > 199 && pm.response.code < 203){",
													"    var jsonData = pm.response.json();",
													"    ",
													"    pm.test(\"Response not null\", function () {",
													"        pm.expect(jsonData).not.eql(null);",
													"    });",
													"",
													"    ",
													"    pm.test(\"Response not undefined\", function () {",
													"        pm.expect(jsonData).not.eql(undefined);",
													"    });",
													"    ",
													"    if(jsonData !== null && jsonData !== undefined){",
													"        //Additional Tests Here",
													"    }",
													"    ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{Score}}{{A}}",
											"host": [
												"{{Score}}{{A}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Scores - Delete All Tester",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "430dacd8-74f4-4443-9ffe-6d128f2a8144",
												"exec": [
													"pm.test(\"Successful request\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
													"});",
													"",
													"",
													"",
													"if(pm.response.code > 199 && pm.response.code < 203){",
													"    var jsonData = pm.response.json();",
													"    var expectedScoresLength = pm.globals.get(\"expectedScoresLength\"); ",
													"    ",
													"    pm.test(\"Response not null\", function () {",
													"        pm.expect(jsonData).not.eql(null);",
													"    });",
													"",
													"    ",
													"    pm.test(\"Response not undefined\", function () {",
													"        pm.expect(jsonData).not.eql(undefined);",
													"    });",
													"    ",
													"    if(jsonData !== null && jsonData !== undefined){",
													"",
													"        pm.test(\"0 Scores after Delete All\", function () {",
													"        ",
													"            pm.expect(jsonData.length).to.eql(expectedScoresLength);",
													"        });",
													"    }",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c697e455-14d8-431d-8b24-bd2ae38b363c",
												"exec": [
													"pm.globals.set(\"expectedScoresLength\", 0);",
													"pm.globals.set(\"PUID\", 0);",
													"pm.globals.set(\"PV\", 0);",
													"pm.globals.unset(\"P_id\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{Score}}{{A}}",
											"host": [
												"{{Score}}{{A}}"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}